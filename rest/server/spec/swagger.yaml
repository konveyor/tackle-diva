swagger: "2.0"
info:
  title: "Tackle-DiVA (Data-intensive Validity Analyzer)"
  description: "Data-centric application code analysis that import a set of application codes and provides database/transaction analysis results"
  version: "0.1"
  license:
    name: "Eclipse Public License 2.0"
    url: "https://github.com/konveyor/tackle-diva/blob/main/LICENSE"

tags:
- name: "analysis"
  description: "Code Analysis"
- name: "database"
  description: "Database"
- name: "transaction"
  description: "Transaction"
schemes:
- "https"
- "http"
paths:
  /analysis/{applicationName}:
    post:
      tags:
      - "analysis"
      summary: "Request data-centric application code analysis."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "Target application name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "GitHub URL of source application codes"
        required: true
        schema:
          $ref: "#/definitions/GithubURL"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid {applicationName}"
        405:
          description: "Validation exception"
    put:
      tags:
      - "analysis"
      summary: "Update an existing application code analysis result."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "Target application name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "GitHub URL of source application codes"
        required: true
        schema:
          $ref: "#/definitions/GithubURL"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid {applicationName}"
        405:
          description: "Validation exception"
    get:
      tags:
      - "analysis"
      summary: "Query application analysis status"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "Target application name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Analysis"
        400:
          description: "Invalid {applicationName}"
        405:
          description: "Validation exception"
    delete:
      tags:
      - "analysis"
      summary: "Delete application analysis results"
      description: "Delete application analysis results"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "Target application name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Analysis"

        400:
          description: "Invalid {applicationName}"
        405:
          description: "Validation exception"


  /database/{applicationName}:
    get:
      tags:
      - "database"
      summary: "Get a list of database tables"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "Target application name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Database"
        400:
          description: "Invalid {applicationName}"
        405:
          description: "Validation exception"

  /transaction/{applicationName}:
    get:
      tags:
      - "transaction"
      summary: "Get a list of transactions"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "Target application name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Transaction"
        400:
          description: "Invalid {applicationName}"
        405:
          description: "Validation exception"

definitions:
  Analysis:
    type: "object"
    required:
    - "name"
    - "githubURL"
    - "status"
    properties:
      name:
        type: "string"
        example: "daytrader"
      githubURL:
        type: "string"
        example: "https://github.com/WASdev/sample.daytrader7"
      status:
        type: "string"
        enum:
        - "available"
        - "pending"
        - "none"
        default: "available"
        
  Database:
    type: "object"
    required:
    - "databases"
    properties:
      databases:
        type: "array"
        items:
          type: "string"

  Transaction:
    type: "object"
    required:
    - "entry"
    - "http-param"
    - "transactions"
    properties:
      entry:
        $ref: "#/definitions/Entry"
      http-param:
        $ref: "#/definitions/HttpParam"
      transactions:
        type: "array"
        items:
          $ref: "#/definitions/Tx"

  Entry:
    type: "object"
    required:
    - "methods"
    properties:
      methods:
        type: "array"
        items:
          type: "string"
      
  HttpParam:
    type: "object"
    required:
    - "action"
    properties:
      action:
        type: "array"
        items:
          type: "string"

  Tx:
    type: "object"
    required:
    - "txid"
    - "transaction"
    properties:
      txid:
        type: "integer"
      transaction:
        type: "array"
        items:
          $ref: "#/definitions/Operation"

  Operation:
    type: "object"
    required:
    - "stacktrace"
    - "sql"
    properties:
      stacktrace:
        $ref: "#/definitions/StackTrace"
      sql:
        type: "string"
        

  StackTrace:
    type: "array"
    items:
      $ref: "#/definitions/Stack"
      
  Stack:
    type: "object"
    required:
    - "method"
    - "file"
    - "position"
    properties:
      method:
        type: "string"
      file:
        type: "string"
      position:
        type: "string"

  GithubURL:
    type: "object"
    required:
    - "githubURL"
    properties:
      githubURL:
        type: "string"

